/*
 * Credits
 * The Credits API provides information about customer credit lines.
 *
 * OpenAPI spec version: 2.2.0
 * Contact: gipinacho@santander.com.mx
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.bancosantander.likeu.model;

import java.util.Objects;
/**
 * Retrieves the payroll portability detail information for this period
 */
public class PayrollDetail {
  private String id = null;

  /**
   * Indicates the status of the payroll portability.   * &#x60;ACTIVE&#x60; -  Indicates that status for payroll portability is active in this moment.   * &#x60;INACTIVE&#x60; - Indicates that the payroll portability status is deactivated. 
   */
  public enum StatusEnum {
      /**
	 * @param String
   * @param String
	 */
    ACTIVE("ACTIVE"),
    INACTIVE("INACTIVE");

    private String value;
/**
	 * @param String
	 */
    StatusEnum(String value) {
      this.value = value;
    }
      /**
   * Indicates the key contract for the benefit
   * @return value
  **/
    public String getValue() {
      return value;
    }

  } 
  
  private StatusEnum status = null;


  private java.util.Date operationDate = null;

   /**
   * Indicates the payroll portability identifier.
   * @return id
  **/
  public String getId() {
    return id;
  }
/**
	 * @param String
	 */
  public void setId(String id) {
    this.id = id;
  }

   /**
   * Indicates the status of the payroll portability.   * &#x60;ACTIVE&#x60; -  Indicates that status for payroll portability is active in this moment.   * &#x60;INACTIVE&#x60; - Indicates that the payroll portability status is deactivated. 
   * @return status
  **/
  public StatusEnum getStatus() {
    return status;
  }
/**
	 * @param StatusEnum
	 */
  public void setStatus(StatusEnum status) {
    this.status = status;
  }

   /**
   * Indicates the date on which the payroll portability was made. [ISO 8601] (https://www.iso.org/iso-8601-date-and-time-format.html
   * @return operationDate
  **/
  public java.util.Date getOperationDate() {
    if (operationDate != null) {
			return new java.util.Date(this.operationDate.getTime());
		  } else {
			return null;
		  }
  }
/**
	 * @param Date
	 */
  public void setOperationDate(java.util.Date operationDate) {
    if (operationDate != null) {
			this.operationDate = new java.util.Date(operationDate.getTime());
		  } else {
			  this.operationDate = null;
		  }
  }


}
