/*
 * Credits
 * The Credits API provides information about customer credit lines.
 *
 * OpenAPI spec version: 2.2.0
 * Contact: gipinacho@santander.com.mx
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.bancosantander.likeu.model;

/**
 * CardDetail
 */

public class CardDetail {

	private AllOfCardDetailCurrentLimit currentLimit = null;

	private String displayNumber = null;

	private String type = null;

	/**
	 * Indicates the status of the card. * &#x60;ACTIVE&#x60; - The card is in
	 * an active state and the customer can operate with it. *
	 * &#x60;BLOCKED&#x60; - The card is blocked and the customer cannot used
	 * it.
	 */

	private StatusEnum status = null;

	private AllOfCardDetailPotentialLimit potentialLimit = null;

	private AllOfCardDetailLowerLimit lowerLimit = null;

	private AllOfCardDetailNextIncrease nextIncrease = null;

	private AllOfCardDetailPeriod period = null;

/**
 * Allocates a new <code>String</code> that contains characters from
 * a subarray of the character array argument. The <code>offset</code>
 * argument is the index of the first character of the subarray and
 * the <code>count</code> argument specifies the length of the
 * subarray. The contents of the subarray are copied; subsequent
 * modification of the character array does not affect the newly
 * created string.
 *
 * @param      currentLimit    array that is the source of characters.
 * @param      displayNumber   the initial offset.
 * @param      type    the length.
 * @param      potentialLimit    the length.
 * @param      lowerLimit    the length.
 * @param      nextIncrease    the length.
 * @param      period    the length.
 * @exception  IndexOutOfBoundsException  if the <code>offset</code>
 *               and <code>count</code> arguments index characters outside
 *               the bounds of the <code>value</code> array.
 */
public CardDetail(
	com.bancosantander.likeu.model.AllOfCardDetailCurrentLimit currentLimit,
	java.lang.String displayNumber,
	java.lang.String type,
	com.bancosantander.likeu.model.AllOfCardDetailPotentialLimit potentialLimit,
	com.bancosantander.likeu.model.AllOfCardDetailLowerLimit lowerLimit,
	com.bancosantander.likeu.model.AllOfCardDetailNextIncrease nextIncrease,
	com.bancosantander.likeu.model.AllOfCardDetailPeriod period) {

this.currentLimit = currentLimit;
this.displayNumber = displayNumber;
this.type = type;
this.potentialLimit = potentialLimit;
this.lowerLimit = lowerLimit;
this.nextIncrease = nextIncrease;
this.period = period;
}

	/**
	 * Adds 10 to the age
	 * 
	 * @param input
	 *            - The age to add 10 to
	 * @returns {number} - The age + 10
	 */
	public enum StatusEnum {
		ACTIVE("ACTIVE"), BLOCKED("BLOCKED");

		private String value;

		StatusEnum(String value) {
			this.value = value;
		}
		public String getValue() {
			return value;
		}

	}

	/**
	 * Available money in the credit card.
	 * 
	 * @return currentLimit
	 **/
	public AllOfCardDetailCurrentLimit getCurrentLimit() {
		return currentLimit;
	}
	/**
	 * @param AllOfCardDetailCurrentLimit
	 */
	public void setCurrentLimit(AllOfCardDetailCurrentLimit currentLimit) {
		this.currentLimit = currentLimit;
	}

	/**
	 * Card number anonymized
	 * 
	 * @return displayNumber
	 **/
	public String getDisplayNumber() {
		return displayNumber;
	}
	/**
	 * @param String
	 */
	public void setDisplayNumber(String displayNumber) {
		this.displayNumber = displayNumber;
	}

	/**
	 * Indicates the card type
	 * 
	 * @return type
	 **/
	public String getType() {
		return type;
	}
	/**
	 * @param String
	 */
	public void setType(String type) {
		this.type = type;
	}

	/**
	 * Indicates the status of the card. * &#x60;ACTIVE&#x60; - The card is in
	 * an active state and the customer can operate with it. *
	 * &#x60;BLOCKED&#x60; - The card is blocked and the customer cannot used
	 * it.
	 * 
	 * @return status
	 **/
	public StatusEnum getStatus() {
		return status;
	}
	/**
	 * @param StatusEnum
	 */
	public void setStatus(StatusEnum status) {
		this.status = status;
	}

	/**
	 * Final limit in the credit card.
	 * 
	 * @return potentialLimit
	 **/
	public AllOfCardDetailPotentialLimit getPotentialLimit() {
		return potentialLimit;
	}
	/**
	 * @param AllOfCardDetailPotentialLimit
	 */
	public void setPotentialLimit(AllOfCardDetailPotentialLimit potentialLimit) {
		this.potentialLimit = potentialLimit;
	}

	/**
	 * indicates the lowest amount that can be given.
	 * 
	 * @return lowerLimit
	 **/
	public AllOfCardDetailLowerLimit getLowerLimit() {
		return lowerLimit;
	}
	/**
	 * @param AllOfCardDetailLowerLimit
	 */
	public void setLowerLimit(AllOfCardDetailLowerLimit lowerLimit) {
		this.lowerLimit = lowerLimit;
	}

	/**
	 * Available money in the credit card.
	 * 
	 * @return nextIncrease
	 **/
	public AllOfCardDetailNextIncrease getNextIncrease() {
		return nextIncrease;
	}
	/**
	 * @param AllOfCardDetailNextIncrease
	 */
	public void setNextIncrease(AllOfCardDetailNextIncrease nextIncrease) {
		this.nextIncrease = nextIncrease;
	}

	/**
	 * Indicates the period detail
	 * 
	 * @return period
	 **/
	public AllOfCardDetailPeriod getPeriod() {
		return period;
	}
	/**
	 * @param AllOfCardDetailPeriod
	 */
	public void setPeriod(AllOfCardDetailPeriod period) {
		this.period = period;
	}
  /**
   * Indicates the status of the benefit.   * &#x60;INITIAL&#x60; -  Indicates the start of benefit.   * &#x60;EVALUATION&#x60; - Indicates when the benefit is in Evaluation.   * &#x60;FINAL&#x60; - Indicates the final phase of benefit. 
   * @param <currentLimit> ffff
   * @param <displayNumber>
   * @param <type>
   * @param <potentialLimit>
   */
	public CardDetail() {
	}


}